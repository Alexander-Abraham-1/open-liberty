<!--
    Copyright (c) 2022 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server>

	<featureManager>
		<feature>appSecurity-3.0</feature>
		<feature>socialLogin-1.0</feature>
		<feature>jaxrs-2.1</feature>
		<feature>timedexit-1.0</feature>
		<feature>distributedSecurityCache-1.0</feature> <!-- TODO Remove when GA -->
	</featureManager>

	<httpEndpoint id="defaultHttpEndpoint"
		httpPort="${bvt.prop.HTTP_secondary}"
		httpsPort="${bvt.prop.HTTP_secondary.secure}" />

	<!--
		Include common configuration. 
	 -->
	<include
		location="${shared.resource.dir}/configs/basicRegistry.xml" />
	<include
		location="${shared.resource.dir}/configs/customLoginModule.xml" />
	<include
		location="${shared.resource.dir}/configs/libraries.xml" />
	<include
		location="${shared.resource.dir}/configs/ssl.xml" />

	<!-- 
        Configure the CachingProvider and CacheManager.
	 -->
	<cachingProvider id="CachingProvider"
		libraryRef="HazelcastClientLib,CustomLoginLib" />
	<cacheManager id="CacheManager"
		cachingProviderRef="CachingProvider">

		<properties
			hazelcast.config.location="file:${shared.resource.dir}/hazelcast/${hazelcast.config.file}" />

	</cacheManager>

	<!--
		Configure the JCache instances.
	 -->
	<cache id="AuthCache" name="AuthCache"
		cacheManagerRef="CacheManager" />

	<!-- 
		Configure the authentication cache to use the JCache. 
	 -->
	<authCache cacheRef="AuthCache" />

	<!--
		OAuth 2.0 configuration. Some of this configuration is generated at runtime as
		it points to the Keycloak endpoints.
	 -->
	<oauth2Login id="keycloakLogin" 
                 clientId="oauth_client"
                 clientSecret="FILL ME IN"
                 scope="email roles profile"
                 authorizationEndpoint="FILL ME IN"
                 tokenEndpoint="FILL ME IN"
                 userApi="FILL ME IN"
                 userNameAttribute="preferred_username" 
                 userApiNeedsSpecialHeader="true">
                 
		<jwt builder="myJwtBuilder" />
                 
	</oauth2Login>
	
    <jwtBuilder id="myJwtBuilder"/>
	
	<!-- 
		Applications.
	 -->
    <application
        type="war"
        id="helloworldApp"
        name="helloworld"
        location="${server.config.dir}/apps/helloworld.war">

      <application-bnd>
        <security-role name="Employee">
          <special-subject type="ALL_AUTHENTICATED_USERS" />
        </security-role>
        <security-role name="Manager">
          <special-subject type="ALL_AUTHENTICATED_USERS" />
        </security-role>
        <security-role name="AllAuthenticated">
          <special-subject type="ALL_AUTHENTICATED_USERS" />
        </security-role>
      </application-bnd>
    </application>

    <javaPermission
        codebase="${server.config.dir}/apps/helloworld.war"
        className="java.security.AllPermission"
        name="*"
        actions="*" />

</server>
