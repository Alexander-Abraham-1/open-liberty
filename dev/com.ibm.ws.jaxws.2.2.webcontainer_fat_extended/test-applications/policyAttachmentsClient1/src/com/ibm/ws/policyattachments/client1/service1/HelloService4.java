
package com.ibm.ws.policyattachments.client1.service1;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "HelloService4", targetNamespace = "http://service1.policyattachments.ws.ibm.com/",
                  wsdlLocation = "http://localhost:8010/policyAttachmentsClient1/HelloService4?wsdl")
//@HandlerChain(file = "./handler-chain.xml")
public class HelloService4 extends Service {

    private final static URL HELLOSERVICE2_WSDL_LOCATION;
    private final static WebServiceException HELLOSERVICE2_EXCEPTION;
    private final static QName HELLOSERVICE2_QNAME = new QName("http://service1.policyattachments.ws.ibm.com/", "HelloService4");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8010/policyAttachmentsClient1/HelloService4?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HELLOSERVICE2_WSDL_LOCATION = url;
        HELLOSERVICE2_EXCEPTION = e;
    }

    public HelloService4() {
        super(__getWsdlLocation(), HELLOSERVICE2_QNAME);
    }

    public HelloService4(WebServiceFeature... features) {
        super(__getWsdlLocation(), HELLOSERVICE2_QNAME, features);
    }

    public HelloService4(URL wsdlLocation) {
        super(wsdlLocation, HELLOSERVICE2_QNAME);
    }

    public HelloService4(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HELLOSERVICE2_QNAME, features);
    }

    public HelloService4(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloService4(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *         returns HelloService1
     */
    @WebEndpoint(name = "HelloService4Port")
    public HelloService1 getHelloService4Port() {
        return super.getPort(new QName("http://service1.policyattachments.ws.ibm.com/", "HelloService4Port"), HelloService1.class);
    }

    /**
     *
     * @param features
     *                     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their
     *                     default values.
     * @return
     *         returns HelloService1
     */
    @WebEndpoint(name = "HelloService4Port")
    public HelloService1 getHelloService4Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://service1.policyattachments.ws.ibm.com/", "HelloService4Port"), HelloService1.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HELLOSERVICE2_EXCEPTION != null) {
            throw HELLOSERVICE2_EXCEPTION;
        }
        return HELLOSERVICE2_WSDL_LOCATION;
    }

}
