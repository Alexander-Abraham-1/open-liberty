/*******************************************************************************
 * Copyright (c) 2017,2024 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
import org.apache.tools.ant.filters.ReplaceTokens

configurations {
	projectDependencies { transitive = false }
}

dependencies {
	projectDependencies project(':com.ibm.websphere.javaee.jaxb.2.2'),
	                    project(':com.ibm.websphere.javaee.jsonp.1.0'),
	                    project(':com.ibm.ws.common.encoder'),
	                    project(':com.ibm.ws.componenttest'),
	                    project(':com.ibm.ws.jaxb.tools'),
	                    project(':com.ibm.ws.junit.extensions'),
	                    project(':com.ibm.ws.logging.core'),
	                    project(':com.ibm.ws.org.glassfish.json'),
	                    project(':com.ibm.ws.org.slf4j.api'),
	                    project(':com.ibm.ws.org.slf4j.simple'),
	                    project(':io.openliberty.com.fasterxml.jackson'),
	                    project(':io.openliberty.org.apache.commons.logging'),
	                    project(':io.openliberty.org.bouncycastle.bcpkix-jdk18on'),
	                    project(':io.openliberty.org.bouncycastle.bcprov-jdk18on'),
	                    project(':io.openliberty.org.bouncycastle.bcutil-jdk18on'),
	                    project(':io.openliberty.org.testcontainers')	               
}

task assembleBootstrap(type: Copy) {
    inputs.property("javaHome", System.properties.('java.home').replace('\\', '\\\\').replace(':', '\\:'))
    def javaHome = System.properties.('java.home').replace('\\', '\\\\').replace(':', '\\:')
    from project.file('autoFVT-templates/bootstrapping.properties')
    into new File(buildDir, 'autoFVT-defaults')
    filter(ReplaceTokens, tokens: [JAVA_HOME: javaHome])
}

task assembleBinaryDependencies(type: Copy) {
	dependsOn ':cnf:copyMavenLibs'
	
	into(new File(buildDir, 'lib'))
	
	//fattest.simplicity.jar
	from(jar) {
	    exclude 'buildfiles'
	}
	
	//Project dependencies
	from(configurations.projectDependencies) {
		rename 'com.ibm.ws.common.encoder.jar', 'fattest.encoder.jar'
	}
	
	//Maven dependencies
	from(cnf.file('mavenlibs')) {
        include 'infra.buildtasks-core-7.0.2.jar'
        include 'asm-all-5.2.jar'
        include 'org.apache.aries.util-*.jar'
        include 'osgi.core*.jar'
        include 'jsch-*.jar'
	}
	
	//Transitive dependencies (not from projects)
	from(sourceSets.main.runtimeClasspath.findAll {
		it.getAbsolutePath().contains('.m2') ||
		it.getAbsolutePath().contains('.ibmartifactory') ||
		it.getAbsolutePath().contains('.ibmdhe')
	})
	
	// Debug task
	// eachFile { println it.sourcePath }
}

configurations {
    arquillianFeature
    arquillianJakartaFeature21
}

dependencies {
    arquillianFeature 'io.openliberty.arquillian:arquillian-liberty-support:1.0.8:feature@zip'
    arquillianJakartaFeature21 'io.openliberty.arquillian:arquillian-liberty-support-jakarta:2.1.1:feature@zip'
}

task extractArquillianSupportFeature(type:Sync) {
    configurations.arquillianFeature.each {
        from(zipTree(it))
    }
    into('build/arquillian-feature-extract')
    
    doLast {
        // Update the feature manifest to mark it as a test feature
        file('build/arquillian-feature-extract/extension/lib/features/arquillian-liberty-support.mf')
            .append('IBM-Test-Feature: true\n')
    }
}

task extractArquillianSupportJakartaFeature21(type:Sync) {
    configurations.arquillianJakartaFeature21.each {
        from(zipTree(it))
    }
    rename { String mfFile ->
        mfFile.replace("arquillian-liberty-support.mf", "arquillian-liberty-support-jakarta-2.1.mf")
    }
    into('build/arquillian-jakarta-feature-extract-2.1')

    doLast {
        // Update the feature manifest to mark it as a test feature
        file('build/arquillian-jakarta-feature-extract-2.1/extension/lib/features/arquillian-liberty-support-jakarta-2.1.mf')
            .append('IBM-Test-Feature: true\n')
    }
}

jar {
    dependsOn assembleBootstrap
    dependsOn extractArquillianSupportFeature
    dependsOn extractArquillianSupportJakartaFeature21
    finalizedBy assembleBinaryDependencies
}

task publishArquillianSupportFeature(type:Copy) {
    dependsOn extractArquillianSupportFeature
    from('build/arquillian-feature-extract/extension')
    dependsOn extractArquillianSupportJakartaFeature21
    from('build/arquillian-jakarta-feature-extract-2.1/extension')

    into(buildImage.file('wlp'))
}

assemble {
    dependsOn publishArquillianSupportFeature
}
